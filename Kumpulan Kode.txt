Getting Started with ROS Programming
-git clone https://github.com/PacktPublishing/Mastering-ROS-for-Robotics-Programming-Third-edition
-roscore
-rosrun mastering_ros_demo_pkg demo_topic_publisher
-rosrun mastering_ros_demo_pkg demo_topic_subscriber
-roscore
-rosrun mastering_ros_demo_pkg demo_msg_publisher
-rosrun mastering_ros_demo_pkg demo_msg_subscriber
-roscore
-rosrun mastering_ros_demo_pkg demo_service_server
-rosrun mastering_ros_demo_pkg demo_service_client
-roscore
-rosrun mastering_ros_demo_pkg demo_action_client 10 1
-rosrun mastering_ros_demo_pkg demo_action_server

Working with ROS for 3D Modeling
-roslaunch mastering_ros_robot_description_pkg view_demo.launch
-roslaunch mastering_ros_robot_description_pkg view_arm.launch
-roslaunch mastering_ros_robot_description_pkg view_mobile_robot.launch

Simulating Robots Using ROS and Gazebo
-roslaunch seven_dof_arm_gazebo seven_dof_arm_gazebo_control.launch
-rostopic pub /seven_dof_arm/joint4_position_controller/command std_msgs/Float64 “data: 1.0”
-roslaunch diff_wheeled_robot_gazebo diff_wheeled_gazebo_full.launch
-roslaunch diff_wheeled_robot_control keyboard_teleop.launch

Simulating Robots Using ROS, CoppeliaSim, and Webots
-roscore
-cd dev/coppeliaSim
-./coppeliaSim.sh
-rqt_image_view
-roscore
-cd dev/coppeliaSim
-./coppeliaSim.sh
-rostopic pub /csim_demo/seven_dof_arm/elbow_pitch/cmd std_msgs/Float32 “data: 1.0”
-rostopic echo /csim_demo/seven_dof_arme/elbow_pitch/state
-roscore
-cd dev/coppeliaSim
-webots
-rostopic list
-rostopic echo /model_name
-rosservice list
-rosservice call /e_puck_59313_jcacace_Lenovo_Legion_5_15ARH05/camera/enable “value: True"
-rqt_image_view
-roscore
-webots
-rosrun webots_demo_pkg e_puck_manager
-roslaunch diff_wheeled_robot_control keyboard_teleop.launch
